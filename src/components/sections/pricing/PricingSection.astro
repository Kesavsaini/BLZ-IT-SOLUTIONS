---
// Import SecondaryCTA component for use in this module
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro";
import Icon from "@components/ui/icons/Icon.astro";

// Define props from Astro
const { pricing } = Astro.props;

// Define TypeScript type for products.
type Product = {
  name: string;
  description: string;
  price: string;
  cents: string;
  billingFrequency: string;
  features: Array<string>;
  purchaseBtnTitle: string;
  purchaseLink: string;
};

interface PricingSectionProps {
  title: string;
  subTitle: string;
  badge: string;
  thirdOption: string;
  btnText: string;
  pricing: {
    title: string;
    subTitle: string;
    Basic: Product;
    Standard: Product;
    Premium: Product;
  };
}
---

<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <!-- Section heading and sub-heading -->
  <div class="mx-auto mb-10 max-w-2xl text-center lg:mb-14">
    <h2
      class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
    >
      {pricing.title}
    </h2>
    <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
      {pricing.subTitle}
    </p>
  </div>
  <!-- Contains two main product blocks -->
  <div class="flex flex-wrap md:flex-nowrap mb-12 items-center justify-center gap-4 sm:gap-0">
    <!-- Starter Kit product details -->
    <div
      class="w-full rounded-xl bg-black dark:bg-white p-6 sm:w-1/2 sm:rounded-r-none sm:p-8 lg:w-1/3"
    >
      <div class="mb-4">
        <h3 class="text-2xl font-bold text-neutral-100 dark:text-neutral-900 sm:text-3xl">
          {pricing.Basic.name}
        </h3>
        <p class="text-indigo-300 dark:text-[#1e1b4b]">{pricing.Basic.description}</p>
      </div>

      <div class="mb-4">
        <span class="text-2xl font-bold text-neutral-200 dark:text-neutral-800"
          >{pricing.Basic.price}</span
        >
        <!-- <span class="ms-3 text-sm text-indigo-200 dark:text-[#1e1b4b]"
          >{pricing.Basic.billingFrequency}</span
        > -->
      </div>
      <!-- Features list - automatically created by mapping over `features` array -->
      <ul class="mb-6 space-y-2 text-neutral-300 dark:text-neutral-900">
        {
          pricing.Basic.features.map((feature: string) => (
            <li class="flex items-center gap-1.5">
              <Icon name="checkCircle" />

              <span>{feature}</span>
            </li>
          ))
        }
      </ul>
      <!-- CTA for purchasing the product -->
      <!-- <a
        href={pricing.Basic.purchaseLink}
        class="block rounded-lg bg-gray-500 px-8 py-3 text-center text-sm font-bold text-gray-100 outline-none ring-indigo-300 transition duration-100 hover:bg-gray-600 focus-visible:ring active:text-gray-300 md:text-base"
        >{pricing.Basic.purchaseBtnTitle}</a
      > -->
    </div>
    <!-- Professional Toolbox product details -->
    <div
      class="w-full rounded-xl bg-gradient-to-tr from-indigo-600 to-[#1e1b4b] p-6 shadow-xl sm:w-1/2 sm:p-8"
    >
      <div
        class="mb-4 flex flex-col items-start justify-between gap-4 lg:flex-row"
      >
        <div>
          <h3 class="text-2xl font-bold text-neutral-100 sm:text-3xl">
            {pricing.Premium.name}
          </h3>
          <p class="text-indigo-200">{pricing.Premium.description}</p>
        </div>

        <span
          class="order-first inline-block rounded-full bg-indigo-200 bg-opacity-50 px-3 py-1 text-xs font-bold uppercase tracking-wider text-center text-indigo-600 lg:order-none"
          >{pricing.badge}</span
        >
      </div>

      <div class="mb-4">
        <span class="text-4xl font-bold text-neutral-100"
          >{pricing.Premium.price}</span
        >
        <!-- <span class="ms-3 text-indigo-200"
          >{pricing.Premium.billingFrequency}</span
        > -->
      </div>
      <!-- Features list - automatically created by mapping over `features` array -->
      <ul class="mb-6 space-y-2 text-indigo-100">
        {
          pricing.Premium.features.map((feature: string) => (
            <li class="flex items-center gap-1.5">
              <Icon name="checkCircle" />

              <span>{feature}</span>
            </li>
          ))
        }
      </ul>
      <!-- CTA for purchasing the product -->
      <!-- <a
        href={pricing.Premium.purchaseLink}
        class="block rounded-lg bg-indigo-200 bg-opacity-50 px-8 py-3 text-center text-sm font-bold text-neutral-100 outline-none ring-indigo-300 transition duration-100 hover:bg-indigo-300 hover:bg-opacity-50 focus-visible:ring active:bg-indigo-400 md:text-base"
        >{pricing.Premium.purchaseBtnTitle}</a
      > -->
    </div>




    <!-------New Card------>
    <div
      class="w-full rounded-xl bg-black dark:bg-white p-6 sm:w-1/2 sm:rounded-l-none sm:p-8 lg:w-1/3"
    >
      <div class="mb-4">
        <h3 class="text-2xl font-bold text-neutral-100 dark:text-neutral-900 sm:text-3xl">
          {pricing.Standard.name}
        </h3>
        <p class="text-indigo-300 dark:text-[#1e1b4b]">{pricing.Standard.description}</p>
      </div>

      <div class="mb-4">
        <span class="text-2xl font-bold text-neutral-200 dark:text-neutral-800"
          >{pricing.Standard.price}</span
        >
       
        <!-- <span class="ms-3 text-sm text-indigo-200 dark:text-[#1e1b4b]"
          >{pricing.Standard.billingFrequency}</span
        > -->
      </div>
      <!-- Features list - automatically created by mapping over `features` array -->
      <ul class="mb-6 space-y-2 text-neutral-300 dark:text-neutral-900">
        {
          pricing.Standard.features.map((feature: string) => (
            <li class="flex items-center gap-1.5">
              <Icon name="checkCircle" />

              <span>{feature}</span>
            </li>
          ))
        }
      </ul>
      <!-- CTA for purchasing the product -->
    </div>
  </div>


  <!-- Call to action for Enterprise Solutions -->
  <div class="mt-8 flex items-center justify-center gap-x-3 md:mt-12">
    <p class="text-sm text-neutral-600 dark:text-neutral-400">
      {pricing.thirdOption}
    </p>

    <SecondaryCTA title={pricing.btnText} url="#" />
  </div>
</section>
